#!/usr/bin/env python

import time
import pygame
import pygame.camera
from pygame.locals import *

pygame.init()
pygame.camera.init()

class Camera(object):
    def __init__(self):
        # Image size to capture
        self.size = (640, 480)

        # We're lazy, just use the first camera
        cameras = pygame.camera.list_cameras()
        self.cam = pygame.camera.Camera(cameras[0], self.size)
        self.cam.start()

        self.snapshot = None

    def capture(self):
        "Get an image from the camera if it's ready"

        #if self.cam.query_image():
        self.snapshot = self.cam.get_image()

        return self.snapshot

    def get(self):
        "Return the image that has been captured"

        return self.snapshot

    def close(self):
        "Shut things down"

        self.cam.stop()

class StopMotion(object):
    def __init__(self):

        self.images = []
        self.index = 0

    def add_image(self, image):
        "Add an image to the stop motion loop"

        self.images.append(image)

    def get_next(self):
        "Get the next image in the loop"

        if len(self.images) == 0:
            return None

        current_image = self.images[self.index]

        self.index = self.index + 1
        if self.index >= len(self.images):
            self.index = 0

        return current_image

class Capture(object):
    def __init__(self):
        self.size = (1280, 720)
        # create a display surface. standard pygame stuff
        self.display = pygame.display.set_mode(self.size, 0)

        self.timer = time.time()

        self.cam = Camera()
        self.video = StopMotion()

        # create a surface to capture to.  for performance purposes
        # bit depth is the same as that of the display surface.
        self.snapshot = pygame.surface.Surface(self.size, 0, self.display)

    def get_and_flip(self):

        # blit it to the display surface.  simple!
        self.snapshot = self.cam.capture()
        self.display.blit(self.snapshot, (0,0))
        pygame.display.flip()

        if (time.time() - self.timer > 1):
            self.timer = time.time()
            v = self.video.get_next()
            if v is not None:
                self.display.blit(v, (640, 0))

    def main(self):
        going = True
        while going:
            events = pygame.event.get()
            for e in events:
                if e.type == QUIT or (e.type == KEYDOWN and e.key == K_ESCAPE):
                    # close the camera safely
                    self.cam.stop()
                    going = False
                if (e.type == KEYDOWN and e.key == K_SPACE):
                    self.video.add_image(self.snapshot)

            self.get_and_flip()

c = Capture()
c.main()
