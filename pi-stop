#!/usr/bin/env python

import time
import pygame
import pygame.camera
from pygame.locals import *

pygame.init()
pygame.camera.init()

screen_size = (800, 480)
image_size = (400, 300)

class Camera(object):
    def __init__(self):
        # Image size to capture
        self.size = image_size

        # We're lazy, just use the first camera
        cameras = pygame.camera.list_cameras()
        self.cam = pygame.camera.Camera(cameras[0], self.size)
        self.cam.start()

        self.snapshot = None

    def capture(self):
        "Get an image from the camera if it's ready"

        while (not self.cam.query_image()):
            # wait for it
            pass
        self.snapshot = self.cam.get_image()

        return self.snapshot

    def get(self):
        "Return the image that has been captured"

        return self.snapshot

    def close(self):
        "Shut things down"

        self.cam.stop()

class StopMotion(object):
    def __init__(self):

        self.images = []
        self.index = 0

    def add_image(self, image):
        "Add an image to the stop motion loop"

        self.images.append(image)

    def get_next(self):
        "Get the next image in the loop"

        if len(self.images) == 0:
            return None

        current_image = self.images[self.index]

        self.index = self.index + 1
        if self.index >= len(self.images):
            self.index = 0

        return current_image

    def clear(self):
        "Clear the motion queue"

        self.images = []
        self.index = 0

class Button(object):

    def __init__(self, position, text, color):
        self.position = position
        self.color = color
        self.surface = pygame.surface.Surface((150,100))
        self.surface.fill(self.color)

        self.set_text(text)


    def set_text(self, text):
        "Set the text displayed on the button"

        self.font = pygame.font.Font(None, 36)
        self.f_surface = self.font.render(text, 1, (255, 255, 255))

        # Calculate where the font surface goes
        f_y = (self.surface.get_height() / 2) - (self.f_surface.get_height() / 2)
        f_x = (self.surface.get_width() / 2) - (self.f_surface.get_width() / 2)
        self.f_position = (f_x + self.position[0], f_y + self.position[1])

    def display(self, display):
        "print the button on the display"

        display.blit(self.surface, self.position)
        display.blit(self.f_surface, self.f_position)

    def clicked(self):
        "True if the mouse click happened inside this box"

        pos = pygame.mouse.get_pos()

        if (pos[0] > self.position[0] and pos[0] < self.position[0] + 150) and \
           (pos[1] > self.position[1] and pos[1] < self.position[1] + 100):
            return True

        return False

class Capture(object):
    def __init__(self):
        self.size = screen_size
        # create a display surface. standard pygame stuff
        self.display = pygame.display.set_mode(self.size, 0)
        #pygame.mouse.set_visible(False)
        #self.display = pygame.display.set_mode(self.size, pygame.FULLSCREEN)

        self.timer = time.time()
        self.preview = True

        self.cam = Camera()
        self.video = StopMotion()

        self.snapshot_button = Button((50, 340), "Snapshot", (255, 0, 255))
        self.stop_button = Button((220, 340), "Stop", (255, 0, 0))
        self.reset_button = Button((560, 340), "Reset", (0, 255, 0))

        # create a surface to capture to.  for performance purposes
        # bit depth is the same as that of the display surface.
        self.snapshot = pygame.surface.Surface(self.size, 0, self.display)

    def get_and_flip(self):

        # blit it to the display surface.  simple!


        if self.preview and (time.time() - self.timer > 0.1):
            self.snapshot = self.cam.capture()
            self.display.blit(self.snapshot, (0,0))

        if self.preview and (time.time() - self.timer > 0.5):
            self.timer = time.time()
            v = self.video.get_next()
            if v is not None:
                self.display.blit(v, (screen_size[0]/2, 0))

        self.snapshot_button.display(self.display)
        self.stop_button.display(self.display)
        self.reset_button.display(self.display)

        pygame.display.flip()

    def main(self):
        going = True
        while going:
            events = pygame.event.get()
            for e in events:
                if e.type == QUIT or (e.type == KEYDOWN and e.key == K_ESCAPE):
                    # close the camera safely
                    #self.cam.stop()
                    going = False
                if (e.type == KEYDOWN and e.key == K_SPACE):
                    self.video.add_image(self.snapshot)
                if (e.type == MOUSEBUTTONDOWN):
                    if self.snapshot_button.clicked():
                        self.video.add_image(self.snapshot)
                    elif self.stop_button.clicked():
                        if self.preview:
                            self.preview = False
                            self.stop_button.set_text("Start")
                        else:
                            self.preview = True
                            self.stop_button.set_text("Stop")
                    elif self.reset_button.clicked():
                        v = pygame.surface.Surface(image_size)
                        self.display.blit(v, (screen_size[0]/2, 0))
                        self.video.clear()

                        # Also fix the start/stop button
                        self.preview = True
                        self.stop_button.set_text("Stop")

            self.get_and_flip()

c = Capture()
c.main()
